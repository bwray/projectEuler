#include "P_02.h"

#include <stdio.h>

/*
 * 	P2.cpp
 *
 *  Created on: Dec 5, 2016
 *      Author: brian wray
 *
 * 		projecteuler.net/problem=2
 *
 *      Description: Each new term in the Fibonacci sequence is generated by adding the previous
 *      two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 *      By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 *      find the sum of the even-valued terms.
 *
 *      Answer: 4613732
 *
 */
// The value of the 35th fibonacci number exceeds 4 million, so make the default = 34
P2::P2():num(34){}

P2::P2( int n):num(n){}

P2::~P2(){}



int P2::fibonacci( int n ){
    int first = 0;
    int second = 1;
    int counter = 2;
    int sum = 0;
    int maxValue = 4000000;
    while (counter < n){
      int temp = second;

      // Only consider the fib terms that don't exceed 4 million
      if ((second + first) > maxValue) {
    	  printf("Max value (%d) reached\n", maxValue);
    	  break;
      }

      // Only consider the even fib terms, exclude the odd ones.
      else {
		  second = first + second;
		  first = temp;
		  ++counter;
		  //printf("counter = %d, second = %d\n", counter, second);
      }

      // only add the terms which are even.
      if (second % 2 == 0) { sum += second; }

    }

      if (n == 0) { return 0; }

      else { return sum; }

}


void P2::printFibonacci(){
  const int result = fibonacci( num ); // subtract 1 from the user input to make the input 1-based (not 0-based)
  printf("The sum of the even values within the first %d fibonacci numbers = %d\n", num, result);
}
